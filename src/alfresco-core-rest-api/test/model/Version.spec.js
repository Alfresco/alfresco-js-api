/**
 * Alfresco Content Services REST API
 * **Core API**  Provides access to the core features of Alfresco Content Services. 
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AlfrescoCoreRestApi);
  }
}(this, function(expect, AlfrescoCoreRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AlfrescoCoreRestApi.Version();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Version', function() {
    it('should create an instance of Version', function() {
      // uncomment below and update the code to test Version
      //var instane = new AlfrescoCoreRestApi.Version();
      //expect(instance).to.be.a(AlfrescoCoreRestApi.Version);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new AlfrescoCoreRestApi.Version();
      //expect(instance).to.be();
    });

    it('should have the property versionComment (base name: "versionComment")', function() {
      // uncomment below and update the code to test the property versionComment
      //var instane = new AlfrescoCoreRestApi.Version();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instane = new AlfrescoCoreRestApi.Version();
      //expect(instance).to.be();
    });

    it('should have the property nodeType (base name: "nodeType")', function() {
      // uncomment below and update the code to test the property nodeType
      //var instane = new AlfrescoCoreRestApi.Version();
      //expect(instance).to.be();
    });

    it('should have the property isFolder (base name: "isFolder")', function() {
      // uncomment below and update the code to test the property isFolder
      //var instane = new AlfrescoCoreRestApi.Version();
      //expect(instance).to.be();
    });

    it('should have the property isFile (base name: "isFile")', function() {
      // uncomment below and update the code to test the property isFile
      //var instane = new AlfrescoCoreRestApi.Version();
      //expect(instance).to.be();
    });

    it('should have the property modifiedAt (base name: "modifiedAt")', function() {
      // uncomment below and update the code to test the property modifiedAt
      //var instane = new AlfrescoCoreRestApi.Version();
      //expect(instance).to.be();
    });

    it('should have the property modifiedByUser (base name: "modifiedByUser")', function() {
      // uncomment below and update the code to test the property modifiedByUser
      //var instane = new AlfrescoCoreRestApi.Version();
      //expect(instance).to.be();
    });

    it('should have the property content (base name: "content")', function() {
      // uncomment below and update the code to test the property content
      //var instane = new AlfrescoCoreRestApi.Version();
      //expect(instance).to.be();
    });

    it('should have the property aspectNames (base name: "aspectNames")', function() {
      // uncomment below and update the code to test the property aspectNames
      //var instane = new AlfrescoCoreRestApi.Version();
      //expect(instance).to.be();
    });

    it('should have the property properties (base name: "properties")', function() {
      // uncomment below and update the code to test the property properties
      //var instane = new AlfrescoCoreRestApi.Version();
      //expect(instance).to.be();
    });

  });

}));
