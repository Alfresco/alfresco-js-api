/**
 * Alfresco Content Services REST API
 * **Core API**  Provides access to the core features of Alfresco Content Services. 
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AlfrescoCoreRestApi);
  }
}(this, function(expect, AlfrescoCoreRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AlfrescoCoreRestApi.PersonBodyCreate();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PersonBodyCreate', function() {
    it('should create an instance of PersonBodyCreate', function() {
      // uncomment below and update the code to test PersonBodyCreate
      //var instane = new AlfrescoCoreRestApi.PersonBodyCreate();
      //expect(instance).to.be.a(AlfrescoCoreRestApi.PersonBodyCreate);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new AlfrescoCoreRestApi.PersonBodyCreate();
      //expect(instance).to.be();
    });

    it('should have the property firstName (base name: "firstName")', function() {
      // uncomment below and update the code to test the property firstName
      //var instane = new AlfrescoCoreRestApi.PersonBodyCreate();
      //expect(instance).to.be();
    });

    it('should have the property lastName (base name: "lastName")', function() {
      // uncomment below and update the code to test the property lastName
      //var instane = new AlfrescoCoreRestApi.PersonBodyCreate();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instane = new AlfrescoCoreRestApi.PersonBodyCreate();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instane = new AlfrescoCoreRestApi.PersonBodyCreate();
      //expect(instance).to.be();
    });

    it('should have the property skypeId (base name: "skypeId")', function() {
      // uncomment below and update the code to test the property skypeId
      //var instane = new AlfrescoCoreRestApi.PersonBodyCreate();
      //expect(instance).to.be();
    });

    it('should have the property googleId (base name: "googleId")', function() {
      // uncomment below and update the code to test the property googleId
      //var instane = new AlfrescoCoreRestApi.PersonBodyCreate();
      //expect(instance).to.be();
    });

    it('should have the property instantMessageId (base name: "instantMessageId")', function() {
      // uncomment below and update the code to test the property instantMessageId
      //var instane = new AlfrescoCoreRestApi.PersonBodyCreate();
      //expect(instance).to.be();
    });

    it('should have the property jobTitle (base name: "jobTitle")', function() {
      // uncomment below and update the code to test the property jobTitle
      //var instane = new AlfrescoCoreRestApi.PersonBodyCreate();
      //expect(instance).to.be();
    });

    it('should have the property location (base name: "location")', function() {
      // uncomment below and update the code to test the property location
      //var instane = new AlfrescoCoreRestApi.PersonBodyCreate();
      //expect(instance).to.be();
    });

    it('should have the property company (base name: "company")', function() {
      // uncomment below and update the code to test the property company
      //var instane = new AlfrescoCoreRestApi.PersonBodyCreate();
      //expect(instance).to.be();
    });

    it('should have the property mobile (base name: "mobile")', function() {
      // uncomment below and update the code to test the property mobile
      //var instane = new AlfrescoCoreRestApi.PersonBodyCreate();
      //expect(instance).to.be();
    });

    it('should have the property telephone (base name: "telephone")', function() {
      // uncomment below and update the code to test the property telephone
      //var instane = new AlfrescoCoreRestApi.PersonBodyCreate();
      //expect(instance).to.be();
    });

    it('should have the property userStatus (base name: "userStatus")', function() {
      // uncomment below and update the code to test the property userStatus
      //var instane = new AlfrescoCoreRestApi.PersonBodyCreate();
      //expect(instance).to.be();
    });

    it('should have the property enabled (base name: "enabled")', function() {
      // uncomment below and update the code to test the property enabled
      //var instane = new AlfrescoCoreRestApi.PersonBodyCreate();
      //expect(instance).to.be();
    });

    it('should have the property emailNotificationsEnabled (base name: "emailNotificationsEnabled")', function() {
      // uncomment below and update the code to test the property emailNotificationsEnabled
      //var instane = new AlfrescoCoreRestApi.PersonBodyCreate();
      //expect(instance).to.be();
    });

    it('should have the property password (base name: "password")', function() {
      // uncomment below and update the code to test the property password
      //var instane = new AlfrescoCoreRestApi.PersonBodyCreate();
      //expect(instance).to.be();
    });

    it('should have the property aspectNames (base name: "aspectNames")', function() {
      // uncomment below and update the code to test the property aspectNames
      //var instane = new AlfrescoCoreRestApi.PersonBodyCreate();
      //expect(instance).to.be();
    });

    it('should have the property properties (base name: "properties")', function() {
      // uncomment below and update the code to test the property properties
      //var instane = new AlfrescoCoreRestApi.PersonBodyCreate();
      //expect(instance).to.be();
    });

  });

}));
