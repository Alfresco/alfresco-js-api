/**
 * Alfresco Content Services REST API
 * **Core API**  Provides access to the core features of Alfresco Content Services. 
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AlfrescoCoreRestApi);
  }
}(this, function(expect, AlfrescoCoreRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AlfrescoCoreRestApi.SitesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SitesApi', function() {
    describe('createSite', function() {
      it('should call createSite successfully', function(done) {
        //uncomment below and update the code to test createSite
        //instance.createSite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createSiteMembership', function() {
      it('should call createSiteMembership successfully', function(done) {
        //uncomment below and update the code to test createSiteMembership
        //instance.createSiteMembership(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createSiteMembershipRequestForPerson', function() {
      it('should call createSiteMembershipRequestForPerson successfully', function(done) {
        //uncomment below and update the code to test createSiteMembershipRequestForPerson
        //instance.createSiteMembershipRequestForPerson(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSite', function() {
      it('should call deleteSite successfully', function(done) {
        //uncomment below and update the code to test deleteSite
        //instance.deleteSite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSiteMembership', function() {
      it('should call deleteSiteMembership successfully', function(done) {
        //uncomment below and update the code to test deleteSiteMembership
        //instance.deleteSiteMembership(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSiteMembershipForPerson', function() {
      it('should call deleteSiteMembershipForPerson successfully', function(done) {
        //uncomment below and update the code to test deleteSiteMembershipForPerson
        //instance.deleteSiteMembershipForPerson(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSiteMembershipRequestForPerson', function() {
      it('should call deleteSiteMembershipRequestForPerson successfully', function(done) {
        //uncomment below and update the code to test deleteSiteMembershipRequestForPerson
        //instance.deleteSiteMembershipRequestForPerson(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSite', function() {
      it('should call getSite successfully', function(done) {
        //uncomment below and update the code to test getSite
        //instance.getSite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSiteContainer', function() {
      it('should call getSiteContainer successfully', function(done) {
        //uncomment below and update the code to test getSiteContainer
        //instance.getSiteContainer(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSiteMembership', function() {
      it('should call getSiteMembership successfully', function(done) {
        //uncomment below and update the code to test getSiteMembership
        //instance.getSiteMembership(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSiteMembershipForPerson', function() {
      it('should call getSiteMembershipForPerson successfully', function(done) {
        //uncomment below and update the code to test getSiteMembershipForPerson
        //instance.getSiteMembershipForPerson(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSiteMembershipRequestForPerson', function() {
      it('should call getSiteMembershipRequestForPerson successfully', function(done) {
        //uncomment below and update the code to test getSiteMembershipRequestForPerson
        //instance.getSiteMembershipRequestForPerson(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSiteContainers', function() {
      it('should call listSiteContainers successfully', function(done) {
        //uncomment below and update the code to test listSiteContainers
        //instance.listSiteContainers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSiteMembershipRequestsForPerson', function() {
      it('should call listSiteMembershipRequestsForPerson successfully', function(done) {
        //uncomment below and update the code to test listSiteMembershipRequestsForPerson
        //instance.listSiteMembershipRequestsForPerson(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSiteMemberships', function() {
      it('should call listSiteMemberships successfully', function(done) {
        //uncomment below and update the code to test listSiteMemberships
        //instance.listSiteMemberships(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSiteMembershipsForPerson', function() {
      it('should call listSiteMembershipsForPerson successfully', function(done) {
        //uncomment below and update the code to test listSiteMembershipsForPerson
        //instance.listSiteMembershipsForPerson(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSites', function() {
      it('should call listSites successfully', function(done) {
        //uncomment below and update the code to test listSites
        //instance.listSites(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSite', function() {
      it('should call updateSite successfully', function(done) {
        //uncomment below and update the code to test updateSite
        //instance.updateSite(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSiteMembership', function() {
      it('should call updateSiteMembership successfully', function(done) {
        //uncomment below and update the code to test updateSiteMembership
        //instance.updateSiteMembership(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSiteMembershipRequestForPerson', function() {
      it('should call updateSiteMembershipRequestForPerson successfully', function(done) {
        //uncomment below and update the code to test updateSiteMembershipRequestForPerson
        //instance.updateSiteMembershipRequestForPerson(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
