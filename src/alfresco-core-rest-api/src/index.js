/**
 * Alfresco Content Services REST API
 * **Core API**  Provides access to the core features of Alfresco Content Services.
 *
 * OpenAPI spec version: 1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['./ApiClient', './model/Activity', './model/ActivityEntry', './model/ActivityPaging', './model/ActivityPagingList', './model/Association', './model/AssociationBody', './model/AssociationEntry', './model/AssociationInfo', './model/ChildAssociation', './model/ChildAssociationBody', './model/ChildAssociationEntry', './model/ChildAssociationInfo', './model/Comment', './model/CommentBody', './model/CommentEntry', './model/CommentPaging', './model/CommentPagingList', './model/Company', './model/ContentInfo', './model/DeletedNode', './model/DeletedNodeEntry', './model/DeletedNodesPaging', './model/DeletedNodesPagingList', './model/Error', './model/ErrorError', './model/Favorite', './model/FavoriteBodyCreate', './model/FavoriteEntry', './model/FavoritePaging', './model/FavoritePagingList', './model/FavoriteSite', './model/FavoriteSiteBodyCreate', './model/FavoriteSiteEntry', './model/NetworkQuota', './model/Node', './model/NodeAssociation', './model/NodeAssociationEntry', './model/NodeAssociationPaging', './model/NodeAssociationPagingList', './model/NodeBodyCopy', './model/NodeBodyCreate', './model/NodeBodyCreateAssociation', './model/NodeBodyLock', './model/NodeBodyMove', './model/NodeBodyUpdate', './model/NodeChildAssociation', './model/NodeChildAssociationEntry', './model/NodeChildAssociationPaging', './model/NodeChildAssociationPagingList', './model/NodeEntry', './model/NodePaging', './model/NodePagingList', './model/Pagination', './model/PathElement', './model/PathInfo', './model/PermissionElement', './model/PermissionsBodyUpdate', './model/PermissionsInfo', './model/Person', './model/PersonBodyCreate', './model/PersonBodyUpdate', './model/PersonEntry', './model/PersonNetwork', './model/PersonNetworkEntry', './model/PersonNetworkPaging', './model/PersonNetworkPagingList', './model/PersonPaging', './model/PersonPagingList', './model/Preference', './model/PreferenceEntry', './model/PreferencePaging', './model/PreferencePagingList', './model/Rating', './model/RatingAggregate', './model/RatingBody', './model/RatingEntry', './model/RatingPaging', './model/RatingPagingList', './model/Rendition', './model/RenditionBodyCreate', './model/RenditionEntry', './model/RenditionPaging', './model/RenditionPagingList', './model/RevertBody', './model/SharedLink', './model/SharedLinkBodyCreate', './model/SharedLinkBodyEmail', './model/SharedLinkEntry', './model/SharedLinkPaging', './model/SharedLinkPagingList', './model/Site', './model/SiteBodyCreate', './model/SiteBodyUpdate', './model/SiteContainer', './model/SiteContainerEntry', './model/SiteContainerPaging', './model/SiteContainerPagingList', './model/SiteEntry', './model/SiteMember', './model/SiteMemberEntry', './model/SiteMemberPaging', './model/SiteMemberPagingList', './model/SiteMembershipBodyCreate', './model/SiteMembershipBodyUpdate', './model/SiteMembershipRequest', './model/SiteMembershipRequestBodyCreate', './model/SiteMembershipRequestBodyUpdate', './model/SiteMembershipRequestEntry', './model/SiteMembershipRequestPaging', './model/SiteMembershipRequestPagingList', './model/SitePaging', './model/SitePagingList', './model/SiteRole', './model/SiteRoleEntry', './model/SiteRolePaging', './model/SiteRolePagingList', './model/Tag', './model/TagBody', './model/TagEntry', './model/TagPaging', './model/TagPagingList', './model/UserInfo', './model/Version', './model/VersionEntry', './model/VersionPaging', './model/VersionPagingList', './api/ActivitiesApi', './api/CommentsApi', './api/FavoritesApi', './api/NetworksApi', './api/NodesApi', './api/PeopleApi', './api/PreferencesApi', './api/QueriesApi', './api/RatingsApi', './api/RenditionsApi', './api/SharedlinksApi', './api/SitesApi', './api/TagsApi', './api/TrashcanApi', './api/VersionsApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Activity'), require('./model/ActivityEntry'), require('./model/ActivityPaging'), require('./model/ActivityPagingList'), require('./model/Association'), require('./model/AssociationBody'), require('./model/AssociationEntry'), require('./model/AssociationInfo'), require('./model/ChildAssociation'), require('./model/ChildAssociationBody'), require('./model/ChildAssociationEntry'), require('./model/ChildAssociationInfo'), require('./model/Comment'), require('./model/CommentBody'), require('./model/CommentEntry'), require('./model/CommentPaging'), require('./model/CommentPagingList'), require('./model/Company'), require('./model/ContentInfo'), require('./model/DeletedNode'), require('./model/DeletedNodeEntry'), require('./model/DeletedNodesPaging'), require('./model/DeletedNodesPagingList'), require('./model/Error'), require('./model/ErrorError'), require('./model/Favorite'), require('./model/FavoriteBodyCreate'), require('./model/FavoriteEntry'), require('./model/FavoritePaging'), require('./model/FavoritePagingList'), require('./model/FavoriteSite'), require('./model/FavoriteSiteBodyCreate'), require('./model/FavoriteSiteEntry'), require('./model/NetworkQuota'), require('./model/Node'), require('./model/NodeAssociation'), require('./model/NodeAssociationEntry'), require('./model/NodeAssociationPaging'), require('./model/NodeAssociationPagingList'), require('./model/NodeBodyCopy'), require('./model/NodeBodyCreate'), require('./model/NodeBodyCreateAssociation'), require('./model/NodeBodyLock'), require('./model/NodeBodyMove'), require('./model/NodeBodyUpdate'), require('./model/NodeChildAssociation'), require('./model/NodeChildAssociationEntry'), require('./model/NodeChildAssociationPaging'), require('./model/NodeChildAssociationPagingList'), require('./model/NodeEntry'), require('./model/NodePaging'), require('./model/NodePagingList'), require('./model/Pagination'), require('./model/PathElement'), require('./model/PathInfo'), require('./model/PermissionElement'), require('./model/PermissionsBodyUpdate'), require('./model/PermissionsInfo'), require('./model/Person'), require('./model/PersonBodyCreate'), require('./model/PersonBodyUpdate'), require('./model/PersonEntry'), require('./model/PersonNetwork'), require('./model/PersonNetworkEntry'), require('./model/PersonNetworkPaging'), require('./model/PersonNetworkPagingList'), require('./model/PersonPaging'), require('./model/PersonPagingList'), require('./model/Preference'), require('./model/PreferenceEntry'), require('./model/PreferencePaging'), require('./model/PreferencePagingList'), require('./model/Rating'), require('./model/RatingAggregate'), require('./model/RatingBody'), require('./model/RatingEntry'), require('./model/RatingPaging'), require('./model/RatingPagingList'), require('./model/Rendition'), require('./model/RenditionBodyCreate'), require('./model/RenditionEntry'), require('./model/RenditionPaging'), require('./model/RenditionPagingList'), require('./model/RevertBody'), require('./model/SharedLink'), require('./model/SharedLinkBodyCreate'), require('./model/SharedLinkBodyEmail'), require('./model/SharedLinkEntry'), require('./model/SharedLinkPaging'), require('./model/SharedLinkPagingList'), require('./model/Site'), require('./model/SiteBodyCreate'), require('./model/SiteBodyUpdate'), require('./model/SiteContainer'), require('./model/SiteContainerEntry'), require('./model/SiteContainerPaging'), require('./model/SiteContainerPagingList'), require('./model/SiteEntry'), require('./model/SiteMember'), require('./model/SiteMemberEntry'), require('./model/SiteMemberPaging'), require('./model/SiteMemberPagingList'), require('./model/SiteMembershipBodyCreate'), require('./model/SiteMembershipBodyUpdate'), require('./model/SiteMembershipRequest'), require('./model/SiteMembershipRequestBodyCreate'), require('./model/SiteMembershipRequestBodyUpdate'), require('./model/SiteMembershipRequestEntry'), require('./model/SiteMembershipRequestPaging'), require('./model/SiteMembershipRequestPagingList'), require('./model/SitePaging'), require('./model/SitePagingList'), require('./model/SiteRole'), require('./model/SiteRoleEntry'), require('./model/SiteRolePaging'), require('./model/SiteRolePagingList'), require('./model/Tag'), require('./model/TagBody'), require('./model/TagEntry'), require('./model/TagPaging'), require('./model/TagPagingList'), require('./model/UserInfo'), require('./model/Version'), require('./model/VersionEntry'), require('./model/VersionPaging'), require('./model/VersionPagingList'), require('./api/ActivitiesApi'), require('./api/CommentsApi'), require('./api/FavoritesApi'), require('./api/NetworksApi'), require('./api/NodesApi'), require('./api/PeopleApi'), require('./api/PreferencesApi'), require('./api/QueriesApi'), require('./api/RatingsApi'), require('./api/RenditionsApi'), require('./api/SharedlinksApi'), require('./api/SitesApi'), require('./api/TagsApi'), require('./api/TrashcanApi'), require('./api/VersionsApi'));
  }
}(function(ApiClient, Activity, ActivityEntry, ActivityPaging, ActivityPagingList, Association, AssociationBody, AssociationEntry, AssociationInfo, ChildAssociation, ChildAssociationBody, ChildAssociationEntry, ChildAssociationInfo, Comment, CommentBody, CommentEntry, CommentPaging, CommentPagingList, Company, ContentInfo, DeletedNode, DeletedNodeEntry, DeletedNodesPaging, DeletedNodesPagingList, Error, ErrorError, Favorite, FavoriteBodyCreate, FavoriteEntry, FavoritePaging, FavoritePagingList, FavoriteSite, FavoriteSiteBodyCreate, FavoriteSiteEntry, NetworkQuota, Node, NodeAssociation, NodeAssociationEntry, NodeAssociationPaging, NodeAssociationPagingList, NodeBodyCopy, NodeBodyCreate, NodeBodyCreateAssociation, NodeBodyLock, NodeBodyMove, NodeBodyUpdate, NodeChildAssociation, NodeChildAssociationEntry, NodeChildAssociationPaging, NodeChildAssociationPagingList, NodeEntry, NodePaging, NodePagingList, Pagination, PathElement, PathInfo, PermissionElement, PermissionsBodyUpdate, PermissionsInfo, Person, PersonBodyCreate, PersonBodyUpdate, PersonEntry, PersonNetwork, PersonNetworkEntry, PersonNetworkPaging, PersonNetworkPagingList, PersonPaging, PersonPagingList, Preference, PreferenceEntry, PreferencePaging, PreferencePagingList, Rating, RatingAggregate, RatingBody, RatingEntry, RatingPaging, RatingPagingList, Rendition, RenditionBodyCreate, RenditionEntry, RenditionPaging, RenditionPagingList, RevertBody, SharedLink, SharedLinkBodyCreate, SharedLinkBodyEmail, SharedLinkEntry, SharedLinkPaging, SharedLinkPagingList, Site, SiteBodyCreate, SiteBodyUpdate, SiteContainer, SiteContainerEntry, SiteContainerPaging, SiteContainerPagingList, SiteEntry, SiteMember, SiteMemberEntry, SiteMemberPaging, SiteMemberPagingList, SiteMembershipBodyCreate, SiteMembershipBodyUpdate, SiteMembershipRequest, SiteMembershipRequestBodyCreate, SiteMembershipRequestBodyUpdate, SiteMembershipRequestEntry, SiteMembershipRequestPaging, SiteMembershipRequestPagingList, SitePaging, SitePagingList, SiteRole, SiteRoleEntry, SiteRolePaging, SiteRolePagingList, Tag, TagBody, TagEntry, TagPaging, TagPagingList, UserInfo, Version, VersionEntry, VersionPaging, VersionPagingList, ActivitiesApi, CommentsApi, FavoritesApi, NetworksApi, NodesApi, PeopleApi, PreferencesApi, QueriesApi, RatingsApi, RenditionsApi, SharedlinksApi, SitesApi, TagsApi, TrashcanApi, VersionsApi) {
  'use strict';

  /**
   * Core_APIProvides_access_to_the_core_features_of_Alfresco_Content_Services_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var AlfrescoCoreRestApi = require('index'); // See note below*.
   * var xxxSvc = new AlfrescoCoreRestApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new AlfrescoCoreRestApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new AlfrescoCoreRestApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new AlfrescoCoreRestApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 0.1.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Activity model constructor.
     * @property {module:model/Activity}
     */
    Activity: Activity,
    /**
     * The ActivityEntry model constructor.
     * @property {module:model/ActivityEntry}
     */
    ActivityEntry: ActivityEntry,
    /**
     * The ActivityPaging model constructor.
     * @property {module:model/ActivityPaging}
     */
    ActivityPaging: ActivityPaging,
    /**
     * The ActivityPagingList model constructor.
     * @property {module:model/ActivityPagingList}
     */
    ActivityPagingList: ActivityPagingList,
    /**
     * The Association model constructor.
     * @property {module:model/Association}
     */
    Association: Association,
    /**
     * The AssociationBody model constructor.
     * @property {module:model/AssociationBody}
     */
    AssociationBody: AssociationBody,
    /**
     * The AssociationEntry model constructor.
     * @property {module:model/AssociationEntry}
     */
    AssociationEntry: AssociationEntry,
    /**
     * The AssociationInfo model constructor.
     * @property {module:model/AssociationInfo}
     */
    AssociationInfo: AssociationInfo,
    /**
     * The ChildAssociation model constructor.
     * @property {module:model/ChildAssociation}
     */
    ChildAssociation: ChildAssociation,
    /**
     * The ChildAssociationBody model constructor.
     * @property {module:model/ChildAssociationBody}
     */
    ChildAssociationBody: ChildAssociationBody,
    /**
     * The ChildAssociationEntry model constructor.
     * @property {module:model/ChildAssociationEntry}
     */
    ChildAssociationEntry: ChildAssociationEntry,
    /**
     * The ChildAssociationInfo model constructor.
     * @property {module:model/ChildAssociationInfo}
     */
    ChildAssociationInfo: ChildAssociationInfo,
    /**
     * The Comment model constructor.
     * @property {module:model/Comment}
     */
    Comment: Comment,
    /**
     * The CommentBody model constructor.
     * @property {module:model/CommentBody}
     */
    CommentBody: CommentBody,
    /**
     * The CommentEntry model constructor.
     * @property {module:model/CommentEntry}
     */
    CommentEntry: CommentEntry,
    /**
     * The CommentPaging model constructor.
     * @property {module:model/CommentPaging}
     */
    CommentPaging: CommentPaging,
    /**
     * The CommentPagingList model constructor.
     * @property {module:model/CommentPagingList}
     */
    CommentPagingList: CommentPagingList,
    /**
     * The Company model constructor.
     * @property {module:model/Company}
     */
    Company: Company,
    /**
     * The ContentInfo model constructor.
     * @property {module:model/ContentInfo}
     */
    ContentInfo: ContentInfo,
    /**
     * The DeletedNode model constructor.
     * @property {module:model/DeletedNode}
     */
    DeletedNode: DeletedNode,
    /**
     * The DeletedNodeEntry model constructor.
     * @property {module:model/DeletedNodeEntry}
     */
    DeletedNodeEntry: DeletedNodeEntry,
    /**
     * The DeletedNodesPaging model constructor.
     * @property {module:model/DeletedNodesPaging}
     */
    DeletedNodesPaging: DeletedNodesPaging,
    /**
     * The DeletedNodesPagingList model constructor.
     * @property {module:model/DeletedNodesPagingList}
     */
    DeletedNodesPagingList: DeletedNodesPagingList,
    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error: Error,
    /**
     * The ErrorError model constructor.
     * @property {module:model/ErrorError}
     */
    ErrorError: ErrorError,
    /**
     * The Favorite model constructor.
     * @property {module:model/Favorite}
     */
    Favorite: Favorite,
    /**
     * The FavoriteBodyCreate model constructor.
     * @property {module:model/FavoriteBodyCreate}
     */
    FavoriteBodyCreate: FavoriteBodyCreate,
    /**
     * The FavoriteEntry model constructor.
     * @property {module:model/FavoriteEntry}
     */
    FavoriteEntry: FavoriteEntry,
    /**
     * The FavoritePaging model constructor.
     * @property {module:model/FavoritePaging}
     */
    FavoritePaging: FavoritePaging,
    /**
     * The FavoritePagingList model constructor.
     * @property {module:model/FavoritePagingList}
     */
    FavoritePagingList: FavoritePagingList,
    /**
     * The FavoriteSite model constructor.
     * @property {module:model/FavoriteSite}
     */
    FavoriteSite: FavoriteSite,
    /**
     * The FavoriteSiteBodyCreate model constructor.
     * @property {module:model/FavoriteSiteBodyCreate}
     */
    FavoriteSiteBodyCreate: FavoriteSiteBodyCreate,
    /**
     * The FavoriteSiteEntry model constructor.
     * @property {module:model/FavoriteSiteEntry}
     */
    FavoriteSiteEntry: FavoriteSiteEntry,
    /**
     * The NetworkQuota model constructor.
     * @property {module:model/NetworkQuota}
     */
    NetworkQuota: NetworkQuota,
    /**
     * The Node model constructor.
     * @property {module:model/Node}
     */
    Node: Node,
    /**
     * The NodeAssociation model constructor.
     * @property {module:model/NodeAssociation}
     */
    NodeAssociation: NodeAssociation,
    /**
     * The NodeAssociationEntry model constructor.
     * @property {module:model/NodeAssociationEntry}
     */
    NodeAssociationEntry: NodeAssociationEntry,
    /**
     * The NodeAssociationPaging model constructor.
     * @property {module:model/NodeAssociationPaging}
     */
    NodeAssociationPaging: NodeAssociationPaging,
    /**
     * The NodeAssociationPagingList model constructor.
     * @property {module:model/NodeAssociationPagingList}
     */
    NodeAssociationPagingList: NodeAssociationPagingList,
    /**
     * The NodeBodyCopy model constructor.
     * @property {module:model/NodeBodyCopy}
     */
    NodeBodyCopy: NodeBodyCopy,
    /**
     * The NodeBodyCreate model constructor.
     * @property {module:model/NodeBodyCreate}
     */
    NodeBodyCreate: NodeBodyCreate,
    /**
     * The NodeBodyCreateAssociation model constructor.
     * @property {module:model/NodeBodyCreateAssociation}
     */
    NodeBodyCreateAssociation: NodeBodyCreateAssociation,
    /**
     * The NodeBodyLock model constructor.
     * @property {module:model/NodeBodyLock}
     */
    NodeBodyLock: NodeBodyLock,
    /**
     * The NodeBodyMove model constructor.
     * @property {module:model/NodeBodyMove}
     */
    NodeBodyMove: NodeBodyMove,
    /**
     * The NodeBodyUpdate model constructor.
     * @property {module:model/NodeBodyUpdate}
     */
    NodeBodyUpdate: NodeBodyUpdate,
    /**
     * The NodeChildAssociation model constructor.
     * @property {module:model/NodeChildAssociation}
     */
    NodeChildAssociation: NodeChildAssociation,
    /**
     * The NodeChildAssociationEntry model constructor.
     * @property {module:model/NodeChildAssociationEntry}
     */
    NodeChildAssociationEntry: NodeChildAssociationEntry,
    /**
     * The NodeChildAssociationPaging model constructor.
     * @property {module:model/NodeChildAssociationPaging}
     */
    NodeChildAssociationPaging: NodeChildAssociationPaging,
    /**
     * The NodeChildAssociationPagingList model constructor.
     * @property {module:model/NodeChildAssociationPagingList}
     */
    NodeChildAssociationPagingList: NodeChildAssociationPagingList,
    /**
     * The NodeEntry model constructor.
     * @property {module:model/NodeEntry}
     */
    NodeEntry: NodeEntry,
    /**
     * The NodePaging model constructor.
     * @property {module:model/NodePaging}
     */
    NodePaging: NodePaging,
    /**
     * The NodePagingList model constructor.
     * @property {module:model/NodePagingList}
     */
    NodePagingList: NodePagingList,
    /**
     * The Pagination model constructor.
     * @property {module:model/Pagination}
     */
    Pagination: Pagination,
    /**
     * The PathElement model constructor.
     * @property {module:model/PathElement}
     */
    PathElement: PathElement,
    /**
     * The PathInfo model constructor.
     * @property {module:model/PathInfo}
     */
    PathInfo: PathInfo,
    /**
     * The PermissionElement model constructor.
     * @property {module:model/PermissionElement}
     */
    PermissionElement: PermissionElement,
    /**
     * The PermissionsBodyUpdate model constructor.
     * @property {module:model/PermissionsBodyUpdate}
     */
    PermissionsBodyUpdate: PermissionsBodyUpdate,
    /**
     * The PermissionsInfo model constructor.
     * @property {module:model/PermissionsInfo}
     */
    PermissionsInfo: PermissionsInfo,
    /**
     * The Person model constructor.
     * @property {module:model/Person}
     */
    Person: Person,
    /**
     * The PersonBodyCreate model constructor.
     * @property {module:model/PersonBodyCreate}
     */
    PersonBodyCreate: PersonBodyCreate,
    /**
     * The PersonBodyUpdate model constructor.
     * @property {module:model/PersonBodyUpdate}
     */
    PersonBodyUpdate: PersonBodyUpdate,
    /**
     * The PersonEntry model constructor.
     * @property {module:model/PersonEntry}
     */
    PersonEntry: PersonEntry,
    /**
     * The PersonNetwork model constructor.
     * @property {module:model/PersonNetwork}
     */
    PersonNetwork: PersonNetwork,
    /**
     * The PersonNetworkEntry model constructor.
     * @property {module:model/PersonNetworkEntry}
     */
    PersonNetworkEntry: PersonNetworkEntry,
    /**
     * The PersonNetworkPaging model constructor.
     * @property {module:model/PersonNetworkPaging}
     */
    PersonNetworkPaging: PersonNetworkPaging,
    /**
     * The PersonNetworkPagingList model constructor.
     * @property {module:model/PersonNetworkPagingList}
     */
    PersonNetworkPagingList: PersonNetworkPagingList,
    /**
     * The PersonPaging model constructor.
     * @property {module:model/PersonPaging}
     */
    PersonPaging: PersonPaging,
    /**
     * The PersonPagingList model constructor.
     * @property {module:model/PersonPagingList}
     */
    PersonPagingList: PersonPagingList,
    /**
     * The Preference model constructor.
     * @property {module:model/Preference}
     */
    Preference: Preference,
    /**
     * The PreferenceEntry model constructor.
     * @property {module:model/PreferenceEntry}
     */
    PreferenceEntry: PreferenceEntry,
    /**
     * The PreferencePaging model constructor.
     * @property {module:model/PreferencePaging}
     */
    PreferencePaging: PreferencePaging,
    /**
     * The PreferencePagingList model constructor.
     * @property {module:model/PreferencePagingList}
     */
    PreferencePagingList: PreferencePagingList,
    /**
     * The Rating model constructor.
     * @property {module:model/Rating}
     */
    Rating: Rating,
    /**
     * The RatingAggregate model constructor.
     * @property {module:model/RatingAggregate}
     */
    RatingAggregate: RatingAggregate,
    /**
     * The RatingBody model constructor.
     * @property {module:model/RatingBody}
     */
    RatingBody: RatingBody,
    /**
     * The RatingEntry model constructor.
     * @property {module:model/RatingEntry}
     */
    RatingEntry: RatingEntry,
    /**
     * The RatingPaging model constructor.
     * @property {module:model/RatingPaging}
     */
    RatingPaging: RatingPaging,
    /**
     * The RatingPagingList model constructor.
     * @property {module:model/RatingPagingList}
     */
    RatingPagingList: RatingPagingList,
    /**
     * The Rendition model constructor.
     * @property {module:model/Rendition}
     */
    Rendition: Rendition,
    /**
     * The RenditionBodyCreate model constructor.
     * @property {module:model/RenditionBodyCreate}
     */
    RenditionBodyCreate: RenditionBodyCreate,
    /**
     * The RenditionEntry model constructor.
     * @property {module:model/RenditionEntry}
     */
    RenditionEntry: RenditionEntry,
    /**
     * The RenditionPaging model constructor.
     * @property {module:model/RenditionPaging}
     */
    RenditionPaging: RenditionPaging,
    /**
     * The RenditionPagingList model constructor.
     * @property {module:model/RenditionPagingList}
     */
    RenditionPagingList: RenditionPagingList,
    /**
     * The RevertBody model constructor.
     * @property {module:model/RevertBody}
     */
    RevertBody: RevertBody,
    /**
     * The SharedLink model constructor.
     * @property {module:model/SharedLink}
     */
    SharedLink: SharedLink,
    /**
     * The SharedLinkBodyCreate model constructor.
     * @property {module:model/SharedLinkBodyCreate}
     */
    SharedLinkBodyCreate: SharedLinkBodyCreate,
    /**
     * The SharedLinkBodyEmail model constructor.
     * @property {module:model/SharedLinkBodyEmail}
     */
    SharedLinkBodyEmail: SharedLinkBodyEmail,
    /**
     * The SharedLinkEntry model constructor.
     * @property {module:model/SharedLinkEntry}
     */
    SharedLinkEntry: SharedLinkEntry,
    /**
     * The SharedLinkPaging model constructor.
     * @property {module:model/SharedLinkPaging}
     */
    SharedLinkPaging: SharedLinkPaging,
    /**
     * The SharedLinkPagingList model constructor.
     * @property {module:model/SharedLinkPagingList}
     */
    SharedLinkPagingList: SharedLinkPagingList,
    /**
     * The Site model constructor.
     * @property {module:model/Site}
     */
    Site: Site,
    /**
     * The SiteBodyCreate model constructor.
     * @property {module:model/SiteBodyCreate}
     */
    SiteBodyCreate: SiteBodyCreate,
    /**
     * The SiteBodyUpdate model constructor.
     * @property {module:model/SiteBodyUpdate}
     */
    SiteBodyUpdate: SiteBodyUpdate,
    /**
     * The SiteContainer model constructor.
     * @property {module:model/SiteContainer}
     */
    SiteContainer: SiteContainer,
    /**
     * The SiteContainerEntry model constructor.
     * @property {module:model/SiteContainerEntry}
     */
    SiteContainerEntry: SiteContainerEntry,
    /**
     * The SiteContainerPaging model constructor.
     * @property {module:model/SiteContainerPaging}
     */
    SiteContainerPaging: SiteContainerPaging,
    /**
     * The SiteContainerPagingList model constructor.
     * @property {module:model/SiteContainerPagingList}
     */
    SiteContainerPagingList: SiteContainerPagingList,
    /**
     * The SiteEntry model constructor.
     * @property {module:model/SiteEntry}
     */
    SiteEntry: SiteEntry,
    /**
     * The SiteMember model constructor.
     * @property {module:model/SiteMember}
     */
    SiteMember: SiteMember,
    /**
     * The SiteMemberEntry model constructor.
     * @property {module:model/SiteMemberEntry}
     */
    SiteMemberEntry: SiteMemberEntry,
    /**
     * The SiteMemberPaging model constructor.
     * @property {module:model/SiteMemberPaging}
     */
    SiteMemberPaging: SiteMemberPaging,
    /**
     * The SiteMemberPagingList model constructor.
     * @property {module:model/SiteMemberPagingList}
     */
    SiteMemberPagingList: SiteMemberPagingList,
    /**
     * The SiteMembershipBodyCreate model constructor.
     * @property {module:model/SiteMembershipBodyCreate}
     */
    SiteMembershipBodyCreate: SiteMembershipBodyCreate,
    /**
     * The SiteMembershipBodyUpdate model constructor.
     * @property {module:model/SiteMembershipBodyUpdate}
     */
    SiteMembershipBodyUpdate: SiteMembershipBodyUpdate,
    /**
     * The SiteMembershipRequest model constructor.
     * @property {module:model/SiteMembershipRequest}
     */
    SiteMembershipRequest: SiteMembershipRequest,
    /**
     * The SiteMembershipRequestBodyCreate model constructor.
     * @property {module:model/SiteMembershipRequestBodyCreate}
     */
    SiteMembershipRequestBodyCreate: SiteMembershipRequestBodyCreate,
    /**
     * The SiteMembershipRequestBodyUpdate model constructor.
     * @property {module:model/SiteMembershipRequestBodyUpdate}
     */
    SiteMembershipRequestBodyUpdate: SiteMembershipRequestBodyUpdate,
    /**
     * The SiteMembershipRequestEntry model constructor.
     * @property {module:model/SiteMembershipRequestEntry}
     */
    SiteMembershipRequestEntry: SiteMembershipRequestEntry,
    /**
     * The SiteMembershipRequestPaging model constructor.
     * @property {module:model/SiteMembershipRequestPaging}
     */
    SiteMembershipRequestPaging: SiteMembershipRequestPaging,
    /**
     * The SiteMembershipRequestPagingList model constructor.
     * @property {module:model/SiteMembershipRequestPagingList}
     */
    SiteMembershipRequestPagingList: SiteMembershipRequestPagingList,
    /**
     * The SitePaging model constructor.
     * @property {module:model/SitePaging}
     */
    SitePaging: SitePaging,
    /**
     * The SitePagingList model constructor.
     * @property {module:model/SitePagingList}
     */
    SitePagingList: SitePagingList,
    /**
     * The SiteRole model constructor.
     * @property {module:model/SiteRole}
     */
    SiteRole: SiteRole,
    /**
     * The SiteRoleEntry model constructor.
     * @property {module:model/SiteRoleEntry}
     */
    SiteRoleEntry: SiteRoleEntry,
    /**
     * The SiteRolePaging model constructor.
     * @property {module:model/SiteRolePaging}
     */
    SiteRolePaging: SiteRolePaging,
    /**
     * The SiteRolePagingList model constructor.
     * @property {module:model/SiteRolePagingList}
     */
    SiteRolePagingList: SiteRolePagingList,
    /**
     * The Tag model constructor.
     * @property {module:model/Tag}
     */
    Tag: Tag,
    /**
     * The TagBody model constructor.
     * @property {module:model/TagBody}
     */
    TagBody: TagBody,
    /**
     * The TagEntry model constructor.
     * @property {module:model/TagEntry}
     */
    TagEntry: TagEntry,
    /**
     * The TagPaging model constructor.
     * @property {module:model/TagPaging}
     */
    TagPaging: TagPaging,
    /**
     * The TagPagingList model constructor.
     * @property {module:model/TagPagingList}
     */
    TagPagingList: TagPagingList,
    /**
     * The UserInfo model constructor.
     * @property {module:model/UserInfo}
     */
    UserInfo: UserInfo,
    /**
     * The Version model constructor.
     * @property {module:model/Version}
     */
    Version: Version,
    /**
     * The VersionEntry model constructor.
     * @property {module:model/VersionEntry}
     */
    VersionEntry: VersionEntry,
    /**
     * The VersionPaging model constructor.
     * @property {module:model/VersionPaging}
     */
    VersionPaging: VersionPaging,
    /**
     * The VersionPagingList model constructor.
     * @property {module:model/VersionPagingList}
     */
    VersionPagingList: VersionPagingList,
    /**
     * The ActivitiesApi service constructor.
     * @property {module:api/ActivitiesApi}
     */
    ActivitiesApi: ActivitiesApi,
    /**
     * The CommentsApi service constructor.
     * @property {module:api/CommentsApi}
     */
    CommentsApi: CommentsApi,
    /**
     * The FavoritesApi service constructor.
     * @property {module:api/FavoritesApi}
     */
    FavoritesApi: FavoritesApi,
    /**
     * The NetworksApi service constructor.
     * @property {module:api/NetworksApi}
     */
    NetworksApi: NetworksApi,
    /**
     * The NodesApi service constructor.
     * @property {module:api/NodesApi}
     */
    NodesApi: NodesApi,
    /**
     * The PeopleApi service constructor.
     * @property {module:api/PeopleApi}
     */
    PeopleApi: PeopleApi,
    /**
     * The PreferencesApi service constructor.
     * @property {module:api/PreferencesApi}
     */
    PreferencesApi: PreferencesApi,
    /**
     * The QueriesApi service constructor.
     * @property {module:api/QueriesApi}
     */
    QueriesApi: QueriesApi,
    /**
     * The RatingsApi service constructor.
     * @property {module:api/RatingsApi}
     */
    RatingsApi: RatingsApi,
    /**
     * The RenditionsApi service constructor.
     * @property {module:api/RenditionsApi}
     */
    RenditionsApi: RenditionsApi,
    /**
     * The SharedlinksApi service constructor.
     * @property {module:api/SharedlinksApi}
     */
    SharedlinksApi: SharedlinksApi,
    /**
     * The SitesApi service constructor.
     * @property {module:api/SitesApi}
     */
    SitesApi: SitesApi,
    /**
     * The TagsApi service constructor.
     * @property {module:api/TagsApi}
     */
    TagsApi: TagsApi,
    /**
     * The TrashcanApi service constructor.
     * @property {module:api/TrashcanApi}
     */
    TrashcanApi: TrashcanApi,
    /**
     * The VersionsApi service constructor.
     * @property {module:api/VersionsApi}
     */
    VersionsApi: VersionsApi
  };

  return exports;
}));
