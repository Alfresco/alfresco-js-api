/**
 * Alfresco Content Services REST API
 * **Core API**  Provides access to the core features of Alfresco Content Services.
 *
 * OpenAPI spec version: 1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['../ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.AlfrescoCoreRestApi) {
      root.AlfrescoCoreRestApi = {};
    }
    root.AlfrescoCoreRestApi.Activity = factory(root.AlfrescoCoreRestApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The Activity model module.
   * @module model/Activity
   * @version 0.1.0
   */

  /**
   * Constructs a new <code>Activity</code>.
   * Activities describe any past activity in a site, for example creating an item of content, commenting on a node, liking an item of content.
   * @alias module:model/Activity
   * @class
   * @param postPersonId {String} The id of the person who performed the activity
   * @param id {Number} The unique id of the activity
   * @param feedPersonId {String} The feed on which this activity was posted
   * @param activityType {String} The type of the activity posted
   */
  var exports = function(postPersonId, id, feedPersonId, activityType) {
    var _this = this;

    _this['postPersonId'] = postPersonId;
    _this['id'] = id;


    _this['feedPersonId'] = feedPersonId;

    _this['activityType'] = activityType;
  };

  /**
   * Constructs a <code>Activity</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Activity} obj Optional instance to populate.
   * @return {module:model/Activity} The populated <code>Activity</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('postPersonId')) {
        obj['postPersonId'] = ApiClient.convertToType(data['postPersonId'], 'String');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Number');
      }
      if (data.hasOwnProperty('siteId')) {
        obj['siteId'] = ApiClient.convertToType(data['siteId'], 'String');
      }
      if (data.hasOwnProperty('postedAt')) {
        obj['postedAt'] = ApiClient.convertToType(data['postedAt'], 'Date');
      }
      if (data.hasOwnProperty('feedPersonId')) {
        obj['feedPersonId'] = ApiClient.convertToType(data['feedPersonId'], 'String');
      }
      if (data.hasOwnProperty('activitySummary')) {
        obj['activitySummary'] = ApiClient.convertToType(data['activitySummary'], {'String': 'String'});
      }
      if (data.hasOwnProperty('activityType')) {
        obj['activityType'] = ApiClient.convertToType(data['activityType'], 'String');
      }
    }
    return obj;
  }

  /**
   * The id of the person who performed the activity
   * @member {String} postPersonId
   */
  exports.prototype['postPersonId'] = undefined;
  /**
   * The unique id of the activity
   * @member {Number} id
   */
  exports.prototype['id'] = undefined;
  /**
   * The unique id of the site on which the activity was performed
   * @member {String} siteId
   */
  exports.prototype['siteId'] = undefined;
  /**
   * The date time at which the activity was performed
   * @member {Date} postedAt
   */
  exports.prototype['postedAt'] = undefined;
  /**
   * The feed on which this activity was posted
   * @member {String} feedPersonId
   */
  exports.prototype['feedPersonId'] = undefined;
  /**
   * An object summarizing the activity
   * @member {Object.<String, String>} activitySummary
   */
  exports.prototype['activitySummary'] = undefined;
  /**
   * The type of the activity posted
   * @member {String} activityType
   */
  exports.prototype['activityType'] = undefined;



  return exports;
}));


