/**
 * Alfresco Content Services REST API
 * **Search API**  Provides access to the search features of Alfresco Content Services.
 *
 * OpenAPI spec version: 1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['../../alfrescoApiClient', './model/ContentInfo', './model/Error', './model/ErrorError', './model/GenericBucket', './model/GenericBucketBucketInfo', './model/GenericFacetResponse', './model/GenericMetric', './model/Node', './model/Pagination', './model/PathElement', './model/PathInfo', './model/RequestDefaults', './model/RequestFacetField', './model/RequestFacetFields', './model/RequestFacetIntervals', './model/RequestFacetIntervalsIntervals', './model/RequestFacetQueries', './model/RequestFacetQueriesInner', './model/RequestFacetSet', './model/RequestFields', './model/RequestFilterQueries', './model/RequestFilterQueriesInner', './model/RequestHighlight', './model/RequestHighlightFields', './model/RequestInclude', './model/RequestLimits', './model/RequestLocalization', './model/RequestPagination', './model/RequestPivot', './model/RequestQuery', './model/RequestRange', './model/RequestScope', './model/RequestSortDefinition', './model/RequestSortDefinitionInner', './model/RequestSpellcheck', './model/RequestStats', './model/RequestTemplates', './model/RequestTemplatesInner', './model/ResponseConsistency', './model/ResultBuckets', './model/ResultBucketsBuckets', './model/ResultSetContext', './model/ResultSetContextFacetQueries', './model/ResultSetContextSpellcheck', './model/ResultSetPaging', './model/ResultSetPagingList', './model/ResultSetRowEntry', './model/SearchEntry', './model/SearchEntryHighlight', './model/SearchRequest', './model/UserInfo', './model/ResultNode', './api/SearchApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../../alfrescoApiClient'), require('./model/ContentInfo'), require('./model/Error'), require('./model/ErrorError'), require('./model/GenericBucket'), require('./model/GenericBucketBucketInfo'), require('./model/GenericFacetResponse'), require('./model/GenericMetric'), require('./model/Node'), require('./model/Pagination'), require('./model/PathElement'), require('./model/PathInfo'), require('./model/RequestDefaults'), require('./model/RequestFacetField'), require('./model/RequestFacetFields'), require('./model/RequestFacetIntervals'), require('./model/RequestFacetIntervalsIntervals'), require('./model/RequestFacetQueries'), require('./model/RequestFacetQueriesInner'), require('./model/RequestFacetSet'), require('./model/RequestFields'), require('./model/RequestFilterQueries'), require('./model/RequestFilterQueriesInner'), require('./model/RequestHighlight'), require('./model/RequestHighlightFields'), require('./model/RequestInclude'), require('./model/RequestLimits'), require('./model/RequestLocalization'), require('./model/RequestPagination'), require('./model/RequestPivot'), require('./model/RequestQuery'), require('./model/RequestRange'), require('./model/RequestScope'), require('./model/RequestSortDefinition'), require('./model/RequestSortDefinitionInner'), require('./model/RequestSpellcheck'), require('./model/RequestStats'), require('./model/RequestTemplates'), require('./model/RequestTemplatesInner'), require('./model/ResponseConsistency'), require('./model/ResultBuckets'), require('./model/ResultBucketsBuckets'), require('./model/ResultSetContext'), require('./model/ResultSetContextFacetQueries'), require('./model/ResultSetContextSpellcheck'), require('./model/ResultSetPaging'), require('./model/ResultSetPagingList'), require('./model/ResultSetRowEntry'), require('./model/SearchEntry'), require('./model/SearchEntryHighlight'), require('./model/SearchRequest'), require('./model/UserInfo'), require('./model/ResultNode'), require('./api/SearchApi'));
  }
}(function(ApiClient, ContentInfo, Error, ErrorError, GenericBucket, GenericBucketBucketInfo, GenericFacetResponse, GenericMetric, Node, Pagination, PathElement, PathInfo, RequestDefaults, RequestFacetField, RequestFacetFields, RequestFacetIntervals, RequestFacetIntervalsIntervals, RequestFacetQueries, RequestFacetQueriesInner, RequestFacetSet, RequestFields, RequestFilterQueries, RequestFilterQueriesInner, RequestHighlight, RequestHighlightFields, RequestInclude, RequestLimits, RequestLocalization, RequestPagination, RequestPivot, RequestQuery, RequestRange, RequestScope, RequestSortDefinition, RequestSortDefinitionInner, RequestSpellcheck, RequestStats, RequestTemplates, RequestTemplatesInner, ResponseConsistency, ResultBuckets, ResultBucketsBuckets, ResultSetContext, ResultSetContextFacetQueries, ResultSetContextSpellcheck, ResultSetPaging, ResultSetPagingList, ResultSetRowEntry, SearchEntry, SearchEntryHighlight, SearchRequest, UserInfo, ResultNode, SearchApi) {
  'use strict';

  /**
   * Search_APIProvides_access_to_the_search_features_of_Alfresco_Content_Services_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var AlfrescoContentServicesRestApi = require('index'); // See note below*.
   * var xxxSvc = new AlfrescoContentServicesRestApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new AlfrescoContentServicesRestApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new AlfrescoContentServicesRestApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new AlfrescoContentServicesRestApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 0.1.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The ContentInfo model constructor.
     * @property {module:model/ContentInfo}
     */
    ContentInfo: ContentInfo,
    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error: Error,
    /**
     * The ErrorError model constructor.
     * @property {module:model/ErrorError}
     */
    ErrorError: ErrorError,
    /**
     * The GenericBucket model constructor.
     * @property {module:model/GenericBucket}
     */
    GenericBucket: GenericBucket,
    /**
     * The GenericBucketBucketInfo model constructor.
     * @property {module:model/GenericBucketBucketInfo}
     */
    GenericBucketBucketInfo: GenericBucketBucketInfo,
    /**
     * The GenericFacetResponse model constructor.
     * @property {module:model/GenericFacetResponse}
     */
    GenericFacetResponse: GenericFacetResponse,
    /**
     * The GenericMetric model constructor.
     * @property {module:model/GenericMetric}
     */
    GenericMetric: GenericMetric,
    /**
     * The Node model constructor.
     * @property {module:model/Node}
     */
    Node: Node,
    /**
     * The Pagination model constructor.
     * @property {module:model/Pagination}
     */
    Pagination: Pagination,
    /**
     * The PathElement model constructor.
     * @property {module:model/PathElement}
     */
    PathElement: PathElement,
    /**
     * The PathInfo model constructor.
     * @property {module:model/PathInfo}
     */
    PathInfo: PathInfo,
      /**
       * The QueryBody model constructor.
       * @property {module:model/QueryBody}
       */
    QueryBody: SearchRequest,
    /**
     * The RequestDefaults model constructor.
     * @property {module:model/RequestDefaults}
     */
    RequestDefaults: RequestDefaults,
    /**
     * The RequestFacetField model constructor.
     * @property {module:model/RequestFacetField}
     */
    RequestFacetField: RequestFacetField,
    /**
     * The RequestFacetFields model constructor.
     * @property {module:model/RequestFacetFields}
     */
    RequestFacetFields: RequestFacetFields,
    /**
     * The RequestFacetIntervals model constructor.
     * @property {module:model/RequestFacetIntervals}
     */
    RequestFacetIntervals: RequestFacetIntervals,
    /**
     * The RequestFacetIntervalsIntervals model constructor.
     * @property {module:model/RequestFacetIntervalsIntervals}
     */
    RequestFacetIntervalsIntervals: RequestFacetIntervalsIntervals,
    /**
     * The RequestFacetQueries model constructor.
     * @property {module:model/RequestFacetQueries}
     */
    RequestFacetQueries: RequestFacetQueries,
    /**
     * The RequestFacetQueriesInner model constructor.
     * @property {module:model/RequestFacetQueriesInner}
     */
    RequestFacetQueriesInner: RequestFacetQueriesInner,
    /**
     * The RequestFacetSet model constructor.
     * @property {module:model/RequestFacetSet}
     */
    RequestFacetSet: RequestFacetSet,
    /**
     * The RequestFields model constructor.
     * @property {module:model/RequestFields}
     */
    RequestFields: RequestFields,
    /**
     * The RequestFilterQueries model constructor.
     * @property {module:model/RequestFilterQueries}
     */
    RequestFilterQueries: RequestFilterQueries,
    /**
     * The RequestFilterQueriesInner model constructor.
     * @property {module:model/RequestFilterQueriesInner}
     */
    RequestFilterQueriesInner: RequestFilterQueriesInner,
    /**
     * The RequestHighlight model constructor.
     * @property {module:model/RequestHighlight}
     */
    RequestHighlight: RequestHighlight,
    /**
     * The RequestHighlightFields model constructor.
     * @property {module:model/RequestHighlightFields}
     */
    RequestHighlightFields: RequestHighlightFields,
    /**
     * The RequestInclude model constructor.
     * @property {module:model/RequestInclude}
     */
    RequestInclude: RequestInclude,
    /**
     * The RequestLimits model constructor.
     * @property {module:model/RequestLimits}
     */
    RequestLimits: RequestLimits,
    /**
     * The RequestLocalization model constructor.
     * @property {module:model/RequestLocalization}
     */
    RequestLocalization: RequestLocalization,
    /**
     * The RequestPagination model constructor.
     * @property {module:model/RequestPagination}
     */
    RequestPagination: RequestPagination,
    /**
     * The RequestPivot model constructor.
     * @property {module:model/RequestPivot}
     */
    RequestPivot: RequestPivot,
    /**
     * The RequestQuery model constructor.
     * @property {module:model/RequestQuery}
     */
    RequestQuery: RequestQuery,
    /**
     * The RequestRange model constructor.
     * @property {module:model/RequestRange}
     */
    RequestRange: RequestRange,
    /**
     * The RequestScope model constructor.
     * @property {module:model/RequestScope}
     */
    RequestScope: RequestScope,
    /**
     * The RequestSortDefinition model constructor.
     * @property {module:model/RequestSortDefinition}
     */
    RequestSortDefinition: RequestSortDefinition,
    /**
     * The RequestSortDefinitionInner model constructor.
     * @property {module:model/RequestSortDefinitionInner}
     */
    RequestSortDefinitionInner: RequestSortDefinitionInner,
    /**
     * The RequestSpellcheck model constructor.
     * @property {module:model/RequestSpellcheck}
     */
    RequestSpellcheck: RequestSpellcheck,
    /**
     * The RequestStats model constructor.
     * @property {module:model/RequestStats}
     */
    RequestStats: RequestStats,
    /**
     * The RequestTemplates model constructor.
     * @property {module:model/RequestTemplates}
     */
    RequestTemplates: RequestTemplates,
    /**
     * The RequestTemplatesInner model constructor.
     * @property {module:model/RequestTemplatesInner}
     */
    RequestTemplatesInner: RequestTemplatesInner,
    /**
     * The ResponseConsistency model constructor.
     * @property {module:model/ResponseConsistency}
     */
    ResponseConsistency: ResponseConsistency,
    /**
     * The ResultBuckets model constructor.
     * @property {module:model/ResultBuckets}
     */
    ResultBuckets: ResultBuckets,
    /**
     * The ResultBucketsBuckets model constructor.
     * @property {module:model/ResultBucketsBuckets}
     */
    ResultBucketsBuckets: ResultBucketsBuckets,
    /**
     * The ResultSetContext model constructor.
     * @property {module:model/ResultSetContext}
     */
    ResultSetContext: ResultSetContext,
    /**
     * The ResultSetContextFacetQueries model constructor.
     * @property {module:model/ResultSetContextFacetQueries}
     */
    ResultSetContextFacetQueries: ResultSetContextFacetQueries,
    /**
     * The ResultSetContextSpellcheck model constructor.
     * @property {module:model/ResultSetContextSpellcheck}
     */
    ResultSetContextSpellcheck: ResultSetContextSpellcheck,
    /**
     * The ResultSetPaging model constructor.
     * @property {module:model/ResultSetPaging}
     */
    ResultSetPaging: ResultSetPaging,
    /**
     * The ResultSetPagingList model constructor.
     * @property {module:model/ResultSetPagingList}
     */
    ResultSetPagingList: ResultSetPagingList,
    /**
     * The ResultSetRowEntry model constructor.
     * @property {module:model/ResultSetRowEntry}
     */
    ResultSetRowEntry: ResultSetRowEntry,
    /**
     * The SearchEntry model constructor.
     * @property {module:model/SearchEntry}
     */
    SearchEntry: SearchEntry,
    /**
     * The SearchEntryHighlight model constructor.
     * @property {module:model/SearchEntryHighlight}
     */
    SearchEntryHighlight: SearchEntryHighlight,
    /**
     * The SearchRequest model constructor.
     * @property {module:model/SearchRequest}
     */
    SearchRequest: SearchRequest,
    /**
     * The UserInfo model constructor.
     * @property {module:model/UserInfo}
     */
    UserInfo: UserInfo,
    /**
     * The ResultNode model constructor.
     * @property {module:model/ResultNode}
     */
    ResultNode: ResultNode,
    /**
     * The SearchApi service constructor.
     * @property {module:api/SearchApi}
     */
    SearchApi: SearchApi
  };

  return exports;
}));
