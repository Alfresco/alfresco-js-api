/**
 * Alfresco Content Services REST API
 * **Search API**  Provides access to the search features of Alfresco Content Services.
 *
 * OpenAPI spec version: 1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['../../../alfrescoApiClient', '../model/GenericBucketBucketInfo', '../model/GenericMetric'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../../../alfrescoApiClient'), require('./GenericBucketBucketInfo'), require('./GenericMetric'));
  } else {
    // Browser globals (root is window)
    if (!root.AlfrescoContentServicesRestApi) {
      root.AlfrescoContentServicesRestApi = {};
    }
    root.AlfrescoContentServicesRestApi.GenericBucket = factory(root.AlfrescoContentServicesRestApi.ApiClient, root.AlfrescoContentServicesRestApi.GenericBucketBucketInfo, root.AlfrescoContentServicesRestApi.GenericMetric);
  }
}(this, function(ApiClient, GenericBucketBucketInfo, GenericMetric) {
  'use strict';




  /**
   * The GenericBucket model module.
   * @module model/GenericBucket
   * @version 0.1.0
   */

  /**
   * Constructs a new <code>GenericBucket</code>.
   * A bucket of facet results
   * @alias module:model/GenericBucket
   * @class
   */
  var exports = function() {
    var _this = this;







  };

  /**
   * Constructs a <code>GenericBucket</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {any} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/GenericBucket} obj Optional instance to populate.
   * @return {module:model/GenericBucket} The populated <code>GenericBucket</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('label')) {
        obj['label'] = ApiClient.convertToType(data['label'], 'String');
      }
      if (data.hasOwnProperty('filterQuery')) {
        obj['filterQuery'] = ApiClient.convertToType(data['filterQuery'], 'String');
      }
      if (data.hasOwnProperty('display')) {
        obj['display'] = ApiClient.convertToType(data['display'], Object);
      }
      if (data.hasOwnProperty('metrics')) {
        obj['metrics'] = ApiClient.convertToType(data['metrics'], [GenericMetric]);
      }
      if (data.hasOwnProperty('facets')) {
        obj['facets'] = ApiClient.convertToType(data['facets'], [Object]);
      }
      if (data.hasOwnProperty('bucketInfo')) {
        obj['bucketInfo'] = GenericBucketBucketInfo.constructFromObject(data['bucketInfo']);
      }
    }
    return obj;
  }

  /**
   * The bucket label
   * @member {string} label
   */
  exports.prototype['label'] = undefined;
  /**
   * The filter query you can use to apply this facet
   * @member {string} filterQuery
   */
  exports.prototype['filterQuery'] = undefined;
  /**
   * An optional field for additional display information
   * @member {any} display
   */
  exports.prototype['display'] = undefined;
  /**
   * An array of buckets and values
   * @member {module:model/GenericMetric[]} metrics
   */
  exports.prototype['metrics'] = undefined;
  /**
   * Additional list of nested facets
   * @member {any[]} facets
   */
  exports.prototype['facets'] = undefined;
  /**
   * @member {module:model/GenericBucketBucketInfo} bucketInfo
   */
  exports.prototype['bucketInfo'] = undefined;



  return exports;
}));


