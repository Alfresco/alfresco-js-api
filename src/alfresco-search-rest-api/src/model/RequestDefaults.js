/**
 * Alfresco Content Services REST API
 * **Search API**  Provides access to the search features of Alfresco Content Services. 
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['../../../alfrescoApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../../../alfrescoApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.AlfrescoContentServicesRestApi) {
      root.AlfrescoContentServicesRestApi = {};
    }
    root.AlfrescoContentServicesRestApi.RequestDefaults = factory(root.AlfrescoContentServicesRestApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The RequestDefaults model module.
   * @module model/RequestDefaults
   * @version 1
   */

  /**
   * Constructs a new <code>RequestDefaults</code>.
   * Common query defaults
   * @alias module:model/RequestDefaults
   * @class
   */
  var exports = function() {
    var _this = this;






  };

  /**
   * Constructs a <code>RequestDefaults</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/RequestDefaults} obj Optional instance to populate.
   * @return {module:model/RequestDefaults} The populated <code>RequestDefaults</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('textAttributes')) {
        obj['textAttributes'] = ApiClient.convertToType(data['textAttributes'], ['String']);
      }
      if (data.hasOwnProperty('defaultFTSOperator')) {
        obj['defaultFTSOperator'] = ApiClient.convertToType(data['defaultFTSOperator'], 'String');
      }
      if (data.hasOwnProperty('defaultFTSFieldOperator')) {
        obj['defaultFTSFieldOperator'] = ApiClient.convertToType(data['defaultFTSFieldOperator'], 'String');
      }
      if (data.hasOwnProperty('namespace')) {
        obj['namespace'] = ApiClient.convertToType(data['namespace'], 'String');
      }
      if (data.hasOwnProperty('defaultFieldName')) {
        obj['defaultFieldName'] = ApiClient.convertToType(data['defaultFieldName'], 'String');
      }
    }
    return obj;
  }

  /**
   * A list of query fields/properties used to expand TEXT: queries. The default is cm:content. You could include all content properties using d:content or list all individual content properties or types. As more terms are included the query size, complexity, memory impact and query time will increase. 
   * @member {Array.<String>} textAttributes
   */
  exports.prototype['textAttributes'] = undefined;
  /**
   * The default way to combine query parts when AND or OR is not explicitly stated - includes ! - + one two three (one two three) 
   * @member {module:model/RequestDefaults.DefaultFTSOperatorEnum} defaultFTSOperator
   * @default 'AND'
   */
  exports.prototype['defaultFTSOperator'] = 'AND';
  /**
   * The default way to combine query parts in field query groups when AND or OR is not explicitly stated - includes ! - + FIELD:(one two three) 
   * @member {module:model/RequestDefaults.DefaultFTSFieldOperatorEnum} defaultFTSFieldOperator
   * @default 'AND'
   */
  exports.prototype['defaultFTSFieldOperator'] = 'AND';
  /**
   * The default name space to use if one is not provided
   * @member {String} namespace
   * @default 'cm'
   */
  exports.prototype['namespace'] = 'cm';
  /**
   * @member {String} defaultFieldName
   * @default 'TEXT'
   */
  exports.prototype['defaultFieldName'] = 'TEXT';


  /**
   * Allowed values for the <code>defaultFTSOperator</code> property.
   * @enum {String}
   * @readonly
   */
  exports.DefaultFTSOperatorEnum = {
    /**
     * value: "AND"
     * @const
     */
    "AND": "AND",
    /**
     * value: "OR"
     * @const
     */
    "OR": "OR"  };

  /**
   * Allowed values for the <code>defaultFTSFieldOperator</code> property.
   * @enum {String}
   * @readonly
   */
  exports.DefaultFTSFieldOperatorEnum = {
    /**
     * value: "AND"
     * @const
     */
    "AND": "AND",
    /**
     * value: "OR"
     * @const
     */
    "OR": "OR"  };


  return exports;
}));


